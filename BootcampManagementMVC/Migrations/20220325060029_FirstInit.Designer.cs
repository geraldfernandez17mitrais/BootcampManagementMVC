// <auto-generated />
using System;
using BootcampManagementMVC.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BootcampManagementMVC.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220325060029_FirstInit")]
    partial class FirstInit
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BootcampManagementMVC.Models.Belt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("belts");
                });

            modelBuilder.Entity("BootcampManagementMVC.Models.BootcampGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Is_active")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("bootcamp_groups");
                });

            modelBuilder.Entity("BootcampManagementMVC.Models.BootcampMember", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Full_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("bootcamp_members");
                });

            modelBuilder.Entity("BootcampManagementMVC.Models.Objective", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Belt_id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sort_no")
                        .HasColumnType("int");

                    b.Property<int>("Syllabus_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Belt_id");

                    b.HasIndex("Syllabus_id");

                    b.ToTable("objectives");
                });

            modelBuilder.Entity("BootcampManagementMVC.Models.ObjectiveItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Estimation_time")
                        .HasColumnType("int");

                    b.Property<string>("Goal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Objective_id")
                        .HasColumnType("int");

                    b.Property<string>("Reference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sort_no")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Objective_id");

                    b.ToTable("objective_items");
                });

            modelBuilder.Entity("BootcampManagementMVC.Models.ObjectiveItemStatusLearning", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("End_date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Objective_item_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Start_date")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status_learning_id")
                        .HasColumnType("int");

                    b.Property<int>("User_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Objective_item_id");

                    b.HasIndex("Status_learning_id");

                    b.ToTable("objective_items_status_learnings");
                });

            modelBuilder.Entity("BootcampManagementMVC.Models.Request", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Bootcamp_group_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Confirm_date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Is_approved")
                        .HasColumnType("bit");

                    b.Property<int>("Manager_user_id")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("User_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Bootcamp_group_id");

                    b.ToTable("requests");
                });

            modelBuilder.Entity("BootcampManagementMVC.Models.StatusLearning", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("status_learnings");
                });

            modelBuilder.Entity("BootcampManagementMVC.Models.Syllabus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Bootcamp_group_id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Bootcamp_group_id");

                    b.ToTable("syllabuses");
                });

            modelBuilder.Entity("BootcampManagementMVC.Models.UserBootcamp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Bootcamp_group_id")
                        .HasColumnType("int");

                    b.Property<DateTime>("End_date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Is_active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Join_date")
                        .HasColumnType("datetime2");

                    b.Property<int>("User_id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Bootcamp_group_id");

                    b.ToTable("user_bootcamps");
                });

            modelBuilder.Entity("BootcampManagementMVC.Models.Objective", b =>
                {
                    b.HasOne("BootcampManagementMVC.Models.Belt", "Belt")
                        .WithMany("Objectives")
                        .HasForeignKey("Belt_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BootcampManagementMVC.Models.Syllabus", "Syllabus")
                        .WithMany("Objectives")
                        .HasForeignKey("Syllabus_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Belt");

                    b.Navigation("Syllabus");
                });

            modelBuilder.Entity("BootcampManagementMVC.Models.ObjectiveItem", b =>
                {
                    b.HasOne("BootcampManagementMVC.Models.Objective", "Objective")
                        .WithMany("ObjectiveItems")
                        .HasForeignKey("Objective_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Objective");
                });

            modelBuilder.Entity("BootcampManagementMVC.Models.ObjectiveItemStatusLearning", b =>
                {
                    b.HasOne("BootcampManagementMVC.Models.ObjectiveItem", "ObjectiveItem")
                        .WithMany("ObjectiveItemsStatusLearnings")
                        .HasForeignKey("Objective_item_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BootcampManagementMVC.Models.StatusLearning", "StatusLearning")
                        .WithMany("ObjectiveItemsStatusLearnings")
                        .HasForeignKey("Status_learning_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ObjectiveItem");

                    b.Navigation("StatusLearning");
                });

            modelBuilder.Entity("BootcampManagementMVC.Models.Request", b =>
                {
                    b.HasOne("BootcampManagementMVC.Models.BootcampGroup", "BootcampGroup")
                        .WithMany("Requests")
                        .HasForeignKey("Bootcamp_group_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BootcampGroup");
                });

            modelBuilder.Entity("BootcampManagementMVC.Models.Syllabus", b =>
                {
                    b.HasOne("BootcampManagementMVC.Models.BootcampGroup", "BootcampGroup")
                        .WithMany("Syllabuses")
                        .HasForeignKey("Bootcamp_group_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BootcampGroup");
                });

            modelBuilder.Entity("BootcampManagementMVC.Models.UserBootcamp", b =>
                {
                    b.HasOne("BootcampManagementMVC.Models.BootcampGroup", "BootcampGroup")
                        .WithMany("UserBootcamps")
                        .HasForeignKey("Bootcamp_group_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BootcampGroup");
                });

            modelBuilder.Entity("BootcampManagementMVC.Models.Belt", b =>
                {
                    b.Navigation("Objectives");
                });

            modelBuilder.Entity("BootcampManagementMVC.Models.BootcampGroup", b =>
                {
                    b.Navigation("Requests");

                    b.Navigation("Syllabuses");

                    b.Navigation("UserBootcamps");
                });

            modelBuilder.Entity("BootcampManagementMVC.Models.Objective", b =>
                {
                    b.Navigation("ObjectiveItems");
                });

            modelBuilder.Entity("BootcampManagementMVC.Models.ObjectiveItem", b =>
                {
                    b.Navigation("ObjectiveItemsStatusLearnings");
                });

            modelBuilder.Entity("BootcampManagementMVC.Models.StatusLearning", b =>
                {
                    b.Navigation("ObjectiveItemsStatusLearnings");
                });

            modelBuilder.Entity("BootcampManagementMVC.Models.Syllabus", b =>
                {
                    b.Navigation("Objectives");
                });
#pragma warning restore 612, 618
        }
    }
}
